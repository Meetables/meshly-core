openapi: 3.0.3
info:
  title: meshly-core API
  version: '1.0.0'
  description: |
    The powerful and extensive backend making it easy to create Social Networks

externalDocs:
  description: Meetables GitHub
  url: https://github.com/Meetables
servers:
  - url: https://localhost:3000/
tags:
  - name: Authentication
    description: Auth stuff
  - name: Test
    description: For testing JWT
paths:
  /api/v1/auth/login:
    post:
      tags:
        - Authentication
      summary: Login
      requestBody:
        description: Login data
        required: true
        content:
          application/json:    
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        200:
          $ref: '#/components/responses/LoginSuccess'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Incorrect credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              
  /api/v1/auth/signup:
    post:
      tags:
        - Authentication
      summary: Sign up
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        201:
          $ref: '#/components/responses/SignupSuccess'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /api/v1/auth/logout:
    post:
      tags:
        - Authentication
      summary: Logout
      responses:
        '200':
          description: Successful logout (deletes the JWT cookie) and returns a confirmation message.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Logged out successfully"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/test:
    post:
      tags:
        - Test
      summary: Test route that requires JWT authentication
      description: |
        Protected endpoint which requires the 'jwt-meshlycore' cookie with a valid token.
        The JWT is verified using middleware before accessing this endpoint.
      parameters:
      - in: cookie
        name: jwt-meshlycore
        required: true
        schema:
          type: string
      responses:
        200:
          description: Authorized successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  authorized:
                    type: string
                    example: "true"
        401:
          description: Unauthorized - Missing or invalid JWT cookie.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/discover/tags:
    get:
      summary: 'Get all tags from the database'
      description: |
        Protected endpoint which requires the 'jwt-meshlycore' cookie with a valid token.
        The JWT is verified using middleware before accessing this endpoint.
      parameters:
      - in: cookie
        name: jwt-meshlycore
        required: true
        schema:
          type: string
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
        '401':
          description: Unauthorized - Missing or invalid JWT cookie.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
 
  /api/v1/discover/user-suggestions:
    get: 
      summary: 'Get suggestions for other user profiles to socialize with.'
      description: |
        Protected endpoint which requires the 'jwt-meshlycore' cookie with a valid token.
        The JWT is verified using middleware before accessing this endpoint.
      requestBody:
        required: true
        content:
          application/json:    
            schema:
              $ref: '#/components/schemas/GetUserSuggestionsRequest'   
      parameters:
      - in: cookie
        name: jwt-meshlycore
        required: true
        schema:
          type: string
        responses:
        '200':
          description: List of recommendations
          content:
            application/json:
              schema:
                type: object
                properties:
                  recommendations:
                    type: array
                    items:
                      type: object
                      properties:
                        user:
                          type: string
                          description: Username of the recommended user
                          example: "alice123"
                        score:
                          type: number
                          description: Weight or score of the recommendation
                          example: 0.85
                        type:
                          type: object
                          description: Flags to indicate "new" or "hot" status
                          properties:
                            new:
                              type: boolean
                              example: true
                            hot:
                              type: boolean
                              example: true
        '500':
          description: Internal Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Internal server error"
  /api/v1/profile/onboarding:
    post:
      summary: Onboard user
      description: |
        This endpoint allows onboarding a user by setting their display name, tags, and profile description.  
        Requires a valid JWT cookie (`jwt-meshlycore`).  
        A user can only be onboarded once — if profile data already exists, this will return a 409.
      tags:
        - user
      parameters:
        - in: cookie
          name: jwt-meshlycore
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardUserRequest'
      responses:
        '200':
          description: User onboarded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User has been onboarded successfully
        '400':
          description: Bad request - Missing or invalid fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict - User already onboarded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          example: "mail@meetables.com"
        password:
          type: string
          example: "12345678"
      required:
        - email
        - password
    LoginResponse:
      type: object
      properties:
        success:
          type: boolean
        user:
          $ref: '#/components/schemas/UserDto'
    SignupRequest:
      type: object
      properties:
        email:
          type: string
          example: "mail@meetables.com"
        password:
          type: string
          example: "12345678"
        username:
          type: string
          example: "user"
      required:
        - email
        - password
        - username
    SignupResponse:
      type: object
      properties:
        success:
          type: boolean
        user:
          $ref: '#/components/schemas/UserDto'
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
    UserDto:
      type: object
      properties:
        id:
          type: string
          example: "67f2ab4692b586f66cefb140"
        email:
          type: string
          example: "mail@meetables.com"
        username:
          type: string
           example: "user"
        profileTags:
          type: array
          items:
            type: string
            example: "someProfileTagId"
        friends:
          type: array
          items:
            type: string
            example: "67f2ddf33d708e12caf2e143"
    OnboardUserRequest:
      type: object
      required:
        - displayName
        - profileTagIds
        - profileDescription
      properties:
        displayName:
          type: string
          example: "JaneDoe"
        profileTagIds:
          type: array
          items:
            type: string
          example: ["tagId1", "tagId2"]
        profileDescription:
          type: string
          example: "Hi, I'm Jane and I love hiking and building communities."
    GetUserSuggestionsRequest:
      type: object
      required: 
        - max_suggestions
      properties: 
        max_suggestions:
          type: Number
    TagResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
                example: "60f7c8573e843b001c8e4b9a"
              name:
                type: string
                example: "Hiking"
              icon:
                type: string
                example: "🏔️"
              category:
                type: string
                example: "Activity"
              superiorTagId:
                type: string
                example: "60f7c8573e843b001c8e4b91"

  responses:
    LoginSuccess:
      description: Successful Login with JWT cookie set.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginResponse'
      headers:
        Set-Cookie:
          description: JWT authentication cookie.
          schema:
            type: string
          example: 'jwt-meshlycore=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9; Max-Age=1296000; HttpOnly; SameSite=Strict; Secure'
    SignupSuccess:
      description: Successful Signup with JWT cookie set.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SignupResponse'
      headers:
        Set-Cookie:
          description: JWT authentication cookie.
          schema:
            type: string
          example: 'jwt-meshlycore=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9; Max-Age=1296000; HttpOnly; SameSite=Strict; Secure'
