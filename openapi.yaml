openapi: 3.0.3 
info:
  title: meshly-core API
  version: '1.0.0'
  description: |
    The powerful and extensive backend making it easy to create Social Networks

externalDocs:
  description: Meetables GitHub
  url: https://github.com/Meetables
servers:
  - url: https://localhost:3000/
tags:
  - name: Authentication
    description: Auth stuff
  - name: Test
    description: For testing JWT
paths:
  /api/v1/auth/login:
    post:
      tags:
        - Authentication
      summary: Login
      requestBody:
        description: Login data
        required: true
        content:
          application/json:    
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        200:
          $ref: '#/components/responses/LoginSuccess'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Incorrect credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              
  /api/v1/auth/signup:
    post:
      tags:
        - Authentication
      summary: Sign up
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        201:
          $ref: '#/components/responses/SignupSuccess'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /api/v1/auth/logout:
    post:
      tags:
        - Authentication
      summary: Logout
      responses:
        '200':
          description: Successful logout (deletes the JWT cookie) and returns a confirmation message.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Logged out successfully"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/test:
    post:
      tags:
        - Test
      summary: Test route that requires JWT authentication
      description: |
        Protected endpoint which requires the 'jwt-meshlycore' cookie with a valid token.
        The JWT is verified using middleware before accessing this endpoint.
      parameters:
      - in: cookie
        name: jwt-meshlycore
        required: true
        schema:
          type: string
      responses:
        200:
          description: Authorized successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  authorized:
                    type: string
                    example: "true"
        401:
          description: Unauthorized - Missing or invalid JWT cookie.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/discover/tags:
    get:
      summary: 'Get all tags from the database'
      description: |
        Protected endpoint which requires the 'jwt-meshlycore' cookie with a valid token.
        The JWT is verified using middleware before accessing this endpoint.
      parameters:
      - in: cookie
        name: jwt-meshlycore
        required: true
        schema:
          type: string
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
        '401':
          description: Unauthorized - Missing or invalid JWT cookie.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /api/v1/discover/profile:
    get:
      tags:
        - Discover
      summary: Get Public Profile Data
      description: |
        Protected endpoint for retrieving public profile data by username.  
        Requires the 'jwt-meshlycore' cookie with a valid token.  
        Returns the public profile information (username, displayName, profileDescription, profileTags) for the given username.
      security:
        - bearerAuth: []
      requestBody:
        description: Request containing the username whose public profile data is needed.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
              properties:
                username:
                  type: string
                  example: "johnDoe"
      responses:
        '200':
          description: Public profile data is returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean 
                    example: true
                  user:
                    type: object
                    properties:
                      username:
                        type: string
                        example: "johnDoe"
                      displayName:
                        type: string
                        example: "John Doe"
                      profileDescription:
                        type: string
                        example: "Just another social media enthusiast."
                      profileTags:
                        type: array
                        items:
                          type: string
                        example: ["tag1", "tag2"]
        '400':
          description: Bad request - Username is required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Missing or invalid JWT cookie.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /api/v1/discover/user-suggestions:
    get: 
      summary: 'Get suggestions for other user profiles to socialize with.'
      description: |
        Protected endpoint which requires the 'jwt-meshlycore' cookie with a valid token.
        The JWT is verified using middleware before accessing this endpoint.
      requestBody:
        required: true
        content:
          application/json:    
            schema:
              $ref: '#/components/schemas/GetUserSuggestionsRequest'   
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of recommendations
          content:
            application/json:
              schema:
                type: object
                properties:
                  recommendations:
                    type: array
                    items:
                      type: object
                      properties:
                        user:
                          type: string
                          description: Username of the recommended user
                          example: "alice123"
                        score:
                          type: number
                          description: Weight or score of the recommendation
                          example: 0.85
                        type:
                          type: object
                          description: Flags to indicate "new" or "hot" status
                          properties:
                            new:
                              type: boolean
                              example: true
                            hot:
                              type: boolean
                              example: true
        '500':
          description: Internal Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Internal server error"
  
  /api/v1/profile/onboarding:
    post:
      summary: Onboard user
      description: |
        This endpoint allows onboarding a user by setting their display name, tags, and profile description.  
        Requires a valid JWT cookie (`jwt-meshlycore`).  
        A user can only be onboarded once — if profile data already exists, this will return a 409.
      tags:
        - user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardUserRequest'
      responses:
        '200':
          description: User onboarded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User has been onboarded successfully
        '400':
          description: Bad request - Missing or invalid fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict - User already onboarded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/profile/ignore-profile:
    post:
      tags:
        - user
      summary: Ignore a suggested profile
      description: |
        Protected endpoint to ignore a suggested user profile.  
        Requires a valid 'jwt-meshlycore' cookie.  
        The specified user will be added to the list of ignored recommendations.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
              properties:
                username:
                  type: string
                  example: "annoying_guy_92"
      responses:
        '200':
          description: Profile successfully ignored
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Bad request - Username missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Missing or invalid JWT cookie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/profile/create-story:
    post:
      tags:
        - user
      summary: Create a new story
      description: |
        Protected endpoint to create a new story.  
        Requires a valid 'jwt-meshlycore' cookie.  
        The story will be created and associated with the authenticated user.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - content
              properties:
                title:
                  type: string
                  example: "My First Story"
                content:
                  type: string
                  example: "This is the content of my first story."
      responses:
        '200':
          description: Story created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Story has been created successfully.
        '400':
          description: Bad request - Missing or invalid fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Missing or invalid JWT cookie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/profile/send-friend-request:
    post:
      tags:
        - user
      summary: Send a friend request
      description: |
        Protected endpoint to send a friend request to another user.  
        Requires a valid 'jwt-meshlycore' cookie.  
        The friend request will be sent to the specified username.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
              properties:
                username:
                  type: string
                  example: "friend_user"
      responses:
        '200':
          description: Friend request sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Friend request has been sent successfully.
        '400':
          description: Bad request - Username missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Missing or invalid JWT cookie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found or already friends
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/profile/respond-to-friend-request:
    post:
      tags:
        - user
      summary: Respond to a friend request
      description: |
        Protected endpoint to respond to a friend request.  
        Requires a valid 'jwt-meshlycore' cookie.  
        The response will be sent to the specified username.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - status
              properties:
                username:
                  type: string
                  example: "friend_user"
                status:
                  type: string
                  enum: [accepted, rejected]
      responses:
        '200':
          description: Friend request response sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Friend request has been responded to successfully.
        '400':
          description: Bad request - Missing or invalid fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Missing or invalid JWT cookie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found or no pending friend requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/profile/friend-requests:
    get:
      tags:
        - user
      summary: Get pending friend requests associated with the authenticated user
      description: |
        Protected endpoint to retrieve pending friend requests for the authenticated user.  
        Requires a valid 'jwt-meshlycore' cookie.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Pending friend requests retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  friendRequests:
                    type: array
                    items:
                      type: object
                      properties:
                        isSender:
                          type: boolean
                          example: true
                        involvedUserUsername:
                          type: string
                          example: "friend_user"
                        result:
                          type: string
                          enum: ["rejected", "accepted"]
                        pending:
                          type: boolean
                          example: true
                        comment:
                          type: string
                          example: "Friend request from friend_user"
                        timestamp:
                          type: string
                          format: date-time
                          example: "2023-10-01T12:00:00Z"
        '401':
          description: Unauthorized - Missing or invalid JWT cookie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/profile/notifications:
    get:
      tags:
        - user
      summary: Get notifications
      description: |
        Protected endpoint to retrieve notifications for the authenticated user.  
        Requires a valid 'jwt-meshlycore' cookie.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Notifications retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  notifications:
                    type: array
                    items:
                      type: object
                      properties:
                        pending:
                          type: boolean
                          example: true
                        type:
                          type: string
                          example: "friend_request"
                        content:
                          type: string
                          example: "Friend request from friend_user"
                        timestamp:
                          type: string
                          format: date-time
                          example: "2023-10-01T12:00:00Z"
        '401':
          description: Unauthorized - Missing or invalid JWT cookie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/extensions/set-availability:
    post:
      tags:
        - Extensions
      summary: Set weekly availability
      description: Set user's availability for each day of the week using time ranges like "12:00-21:00".
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mon:
                  type: string
                  example: "12:00-21:00"
                tue:
                  type: string
                  example: "12:00-21:00"
                wed:
                  type: string
                  example: "12:00-21:00"
                thu:
                  type: string
                  example: "12:00-21:00"
                fri:
                  type: string
                  example: "12:00-21:00"
                sat:
                  type: string
                  example: "12:00-21:00"
                sun:
                  type: string
                  example: "12:00-21:00"
      responses:
        200:
          description: Availability set successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Availability set successfully"
        400:
          description: Missing availability data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/extensions/meeting-lookup:
    post:
      tags:
        - Extensions
      summary: Trigger meeting lookup and send meeting requests
      description: |
        Uses profile tag matching and user availability to send meeting requests.
        Requires JWT in Authorization header.
      security:
        - bearerAuth: []
      requestBody:
        description: requires last location
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - lastLocation
              properties:
                lastLocation:
                  type: string
                  description: The responder’s last known location as "lat,lng"
                  example: "48.8566,2.3522"
      responses:
        200:
          description: Result of the meeting lookup
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Meeting requests sent successfully"
                  availableUserCounter:
                    type: integer
                    example: 3
                  error:
                    type: string
                    nullable: true
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
   
  /api/v1/extensions/accept-instant-meeting-request:
    post:
      tags:
        - Extensions
      summary: Accept an instant meeting request
      description: |
        Accepts a pending instant meeting request,
        computes a meeting point, and notifies the requester.
      security:
        - bearerAuth: []
      requestBody:
        description: Request ID of the instant meet request and the responder’s current location
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - requestId
                - location
              properties:
                requestId:
                  type: string
                  description: friendRequest ID
                  example: "67f2ddf33d708e12caf2e143"
                location:
                  type: string
                  description: The responder’s last known location as "lat,lng"
                  example: "48.8566,2.3522"
      responses:
        '200':
          description: Instant meet request accepted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Instant meet request accepted"
                  requestId:
                    type: string
                    example: "67f2ddf33d708e12caf2e143"
                  meetingLocation:
                    type: object
                    description: The calculated meeting location (format depends on your implementation)
                    example: { "lat": 48.8584, "lng": 2.2945 }
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Request or sender location not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '406':
          description: An instant meeting is already taking place
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          example: "mail@meetables.com"
        password:
          type: string
          example: "12345678"
      required:
        - email
        - password
    LoginResponse:
      type: object
      properties:
        success:
          type: boolean
        user:
          $ref: '#/components/schemas/UserDto'
    SignupRequest:
      type: object
      properties:
        email:
          type: string
          example: "mail@meetables.com"
        password:
          type: string
          example: "12345678"
        username:
          type: string
          example: "user"
      required:
        - email
        - password
        - username
    SignupResponse:
      type: object
      properties:
        success:
          type: boolean
        user:
          $ref: '#/components/schemas/UserDto'
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
    UserDto:
      type: object
      properties:
        id:
          type: string
          example: "67f2ab4692b586f66cefb140"
        email:
          type: string
          example: "mail@meetables.com"
        username:
          type: string
          example: "user"
        profileTags:
          type: array
          items:
            type: string
            example: "someProfileTagId"
        friends:
          type: array
          items:
            type: string
            example: "67f2ddf33d708e12caf2e143"
    OnboardUserRequest:
      type: object
      required:
        - displayName
        - profileTagIds
        - profileDescription
      properties:
        displayName:
          type: string
          example: "JaneDoe"
        profileTagIds:
          type: array
          items:
            type: string
          example: ["tagId1", "tagId2"]
        profileDescription:
          type: string
          example: "Hi, I'm Jane and I love hiking and building communities."
    GetUserSuggestionsRequest:
      type: object
      required: 
        - max_suggestions
      properties: 
        max_suggestions:
          type: number
    TagResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
                example: "60f7c8573e843b001c8e4b9a"
              name:
                type: string
                example: "Hiking"
              icon:
                type: string
                example: "🏔️"
              category:
                type: string
                example: "Activity"
              superiorTagId:
                type: string
                example: "60f7c8573e843b001c8e4b91"

  responses:
    LoginSuccess:
      description: Successful Login with JWT cookie set.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginResponse'
      headers:
        Set-Cookie:
          description: JWT authentication cookie.
          schema:
            type: string
          example: 'jwt-meshlycore=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9; Max-Age=1296000; HttpOnly; SameSite=Strict; Secure'
    SignupSuccess:
      description: Successful Signup with JWT cookie set.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SignupResponse'
      headers:
        Set-Cookie:
          description: JWT authentication cookie.
          schema:
            type: string
          example: 'jwt-meshlycore=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9; Max-Age=1296000; HttpOnly; SameSite=Strict; Secure'
