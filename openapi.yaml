openapi: 3.0.4
info:
  title: meshly-core API
  version: '1.0.0'
  description: |
    The powerful and extensive backend making it easy to create Social Networks

    Will include some useful links here
externalDocs:
  description: Our GitHub Repo
  url: https://swagger.io
servers:
  - url: https://your-custom-domain.com/
tags:
  - name: user
    description: Operations about user
paths:
  /api/v1/auth/login:
    post:
      summary: Login
      requestBody:
        required: true
        content:
          application/json:    
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          $ref: '#/components/responses/LoginSuccess'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Incorrect credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              
  /api/v1/auth/signup:
    post:
      summary: Sign up
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        '201':
          $ref: '#/components/responses/SignupSuccess'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /api/v1/auth/logout:
    post:
      summary: Logout
      responses:
        '200':
          description: Successful logout (deletes the JWT cookie) and returns a confirmation message.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Logged out successfully"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/test:
    post:
      summary: Test route that requires JWT authentication
      description: |
        Protected endpoint which requires the 'jwt-meshlycore' cookie with a valid token.
        The JWT is verified using middleware before accessing this endpoint.
      responses:
        '200':
          description: Authorized successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  authorized:
                    type: string
                    example: "true"
        '401':
          description: Unauthorized - Missing or invalid JWT cookie.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        success:
          type: boolean
        user:
          $ref: '#/components/schemas/User'
    SignupRequest:
      type: object
      required:
        - email
        - password
        - username
      properties:
        email:
          type: string
        password:
          type: string
        username:
          type: string
    SignupResponse:
      type: object
      properties:
        success:
          type: boolean
        user:
          $ref: '#/components/schemas/User'
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string

  responses:
    LoginSuccess:
      description: Successful Login with JWT cookie set.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginResponse'
      headers:
        Set-Cookie:
          description: JWT authentication cookie.
          schema:
            type: string
          example: 'jwt-meshlycore=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9; Max-Age=1296000; HttpOnly; SameSite=Strict; Secure'
    SignupSuccess:
      description: Successful Signup with JWT cookie set.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SignupResponse'
      headers:
        Set-Cookie:
          description: JWT authentication cookie.
          schema:
            type: string
          example: 'jwt-meshlycore=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9; Max-Age=1296000; HttpOnly; SameSite=Strict; Secure'
